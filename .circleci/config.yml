version: 2.1

defaults: &defaults
  docker:
    - image: nerveshub/docker-build:alpine-3.15.3
  working_directory: ~/repo

run_tests: &run_tests
  run:
    name: Run tests
    command: |
      cd tests && ./run_tests.sh

docker_env: &docker_env
  run:
    name: Set docker env
    command: |
      REPO=nerves-project/nerves_system_br

      if [ -z "$CIRCLE_TAG" ]; then
        TAG=$CIRCLE_SHA1
      else
        TAG=$(cat VERSION)
      fi

      echo "export DOCKER_CLI_EXPERIMENTAL=enabled" >> $BASH_ENV
      echo "export DOCKER_REPO=ghcr.io/$REPO" >> $BASH_ENV
      echo "export DOCKER_TAG=$TAG" >> $BASH_ENV
      echo "export DOCKER_PATH=support/docker/nerves_system_br" >> $BASH_ENV

docker_build: &docker_build
  run:
    name: Build docker images
    command: |
       mkdir -p /docker
       apk add --no-cache docker-cli-buildx
       docker context create my_context
       docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
       docker buildx create --name multiarch --driver docker-container --use my_context
       docker buildx build --platform linux/amd64 $DOCKER_PATH --tag $DOCKER_REPO:$DOCKER_TAG"_amd64" --load --progress=plain
       docker buildx build --platform linux/arm64 $DOCKER_PATH --tag $DOCKER_REPO:$DOCKER_TAG"_arm64" --load --progress=plain

       docker save $DOCKER_REPO:$DOCKER_TAG"_amd64" -o /docker/$DOCKER_TAG"_amd64.tar"
       docker save $DOCKER_REPO:$DOCKER_TAG"_arm64" -o /docker/$DOCKER_TAG"_arm64.tar"

docker_import: &docker_import
  run:
    name: Import docker images
    command: |
      docker load -i /docker/$DOCKER_TAG"_amd64".tar
      docker load -i /docker/$DOCKER_TAG"_arm64".tar

docker_push: &docker_push
  run:
    name: Push docker images to ghcr.io
    command: |
      echo $GITHUB_TOKEN | docker login ghcr.io -u "$GITHUB_USER" --password-stdin

      docker image tag $DOCKER_REPO:$DOCKER_TAG"_amd64" $DOCKER_REPO:dev_amd64
      docker push $DOCKER_REPO:dev_amd64

      docker image tag $DOCKER_REPO:$DOCKER_TAG"_arm64" $DOCKER_REPO:dev_arm64
      docker push $DOCKER_REPO:dev_arm64

      if [ -n "$CIRCLE_TAG" ]; then
        docker image tag $DOCKER_REPO:$DOCKER_TAG"_amd64" $DOCKER_REPO:latest_amd64
        docker image tag $DOCKER_REPO:$DOCKER_TAG"_arm64" $DOCKER_REPO:latest_arm64

        docker push $DOCKER_REPO:$DOCKER_TAG"_amd64"
        docker push $DOCKER_REPO:$DOCKER_TAG"_arm64"

        docker push $DOCKER_REPO:latest_amd64
        docker push $DOCKER_REPO:latest_arm64

        docker manifest create $DOCKER_REPO:latest $DOCKER_REPO:latest_amd64 $DOCKER_REPO:latest_arm64
        docker manifest create $DOCKER_REPO:$DOCKER_TAG $DOCKER_REPO:latest_amd64 $DOCKER_REPO:latest_arm64

        docker manifest push $DOCKER_REPO:$DOCKER_TAG
        docker manifest push $DOCKER_REPO:latest
      fi

jobs:
  check-license:
    docker:
      - image: fsfe/reuse:latest
    steps:
      - checkout
      - run: reuse lint

  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: shellcheck
          working_directory: ~/repo
          command: |
            apk add --no-cache shellcheck
            ./scripts/shellchecks.sh
      - setup_remote_docker
      - <<: *docker_env
      - <<: *docker_build
      - save_cache:
          key: docker-{{ .Branch }}-{{ .Revision }}
          paths: "/docker"

  test_amd64:
    docker:
      - image: ghcr.io/nerves-project/nerves_system_br:dev_amd64
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *run_tests

  # test_arm64:
  #   docker:
  #     - image: ghcr.io/nerves-project/nerves_system_br:dev_arm64
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - <<: *run_tests

  push:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - <<: *docker_env
      - restore_cache:
          keys:
            - docker-{{ .Branch }}-{{ .Revision }}
      - <<: *docker_import
      - <<: *docker_push

workflows:
  pipeline:
    jobs:
      - check-license:
          filters:
            tags:
              only: /.*/
      - build:
          context: org-global
          filters:
            tags:
              only: /.*/
      - push:
          context: org-global
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test_amd64:
          context: org-global
          requires:
            - push
          filters:
            tags:
              only: /.*/
      # - test_arm64:
      #     context: org-global
      #     requires:
      #       - push
      #     filters:
      #       tags:
      #         only: /.*/
